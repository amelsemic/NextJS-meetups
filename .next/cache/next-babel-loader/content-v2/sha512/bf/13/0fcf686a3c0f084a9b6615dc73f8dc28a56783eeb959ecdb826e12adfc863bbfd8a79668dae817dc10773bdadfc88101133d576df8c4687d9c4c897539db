{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\onwards-to-a-bigger-project-NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80\",\n    title: \"First meetup\",\n    adress: \"some street city\",\n    description: \"our first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\");\n  const database = client.db();\n  const meetupsCollection = database.collection(\"meetups\");\n  const meetups = meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetups);\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }, {\n      params: {\n        meetupId: 'm2'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: 'https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80',\n        id: meetupId,\n        title: \"First meetup\",\n        adress: \"Some street\",\n        description: \"This is first meetup...\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/User/Desktop/React/onwards-to-a-bigger-project-NextJS/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","database","db","meetupsCollection","collection","meetups","find","_id","toArray","console","log","fallback","paths","params","meetupId","getStaticProps","context","props","meetupData","image","id","title","adress","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,aAAT,GAA0B;AAEtB,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,+JAApB;AAAoL,IAAA,KAAK,EAAC,cAA1L;AAAyM,IAAA,MAAM,EAAC,kBAAhN;AAAmO,IAAA,WAAW,EAAC;AAA/O;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,OAAO,eAAeC,cAAf,GAAiC;AACpC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACjB,qFADiB,CAArB;AAGE,QAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB;AAEA,QAAMC,iBAAiB,GAAGF,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA1B;AACA,QAAMC,OAAO,GAAGF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACF,SAAO;AACHM,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAE,CAAC;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADJ,KAAD,EAIJ;AACCD,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADT,KAJI;AAFJ,GAAP;AAYH;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAE3C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACA,SAAO;AACHG,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,+JADC;AAERC,QAAAA,EAAE,EAAEN,QAFI;AAGRO,QAAAA,KAAK,EAAE,cAHC;AAIRC,QAAAA,MAAM,EAAE,aAJA;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe1B,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\r\nimport {MongoClient} from 'mongodb'\r\n\r\nfunction MeetupDetails () {\r\n\r\n    return <MeetupDetail image='https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80' title=\"First meetup\" adress=\"some street city\" description=\"our first meetup\" />\r\n}\r\n\r\nexport async function getStaticPaths () {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\"\r\n      );\r\n      const database = client.db();\r\n    \r\n      const meetupsCollection = database.collection(\"meetups\");\r\n      const meetups = meetupsCollection.find({}, {_id: 1}).toArray();\r\n      console.log(meetups)\r\n    return {\r\n        fallback: false,\r\n        paths: [{\r\n            params: {\r\n                meetupId: 'm1',\r\n            }\r\n        }, {\r\n            params: {\r\n                meetupId: 'm2',\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: 'https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80',\r\n                id: meetupId,\r\n                title: \"First meetup\", \r\n                adress: \"Some street\",\r\n                description: \"This is first meetup...\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}