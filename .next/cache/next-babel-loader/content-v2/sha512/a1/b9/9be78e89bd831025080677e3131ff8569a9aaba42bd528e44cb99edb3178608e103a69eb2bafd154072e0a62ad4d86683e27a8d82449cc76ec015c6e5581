{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\onwards-to-a-bigger-project-NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    adress: props.meetupData.adress,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/User/Desktop/React/onwards-to-a-bigger-project-NextJS/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","adress","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF3B;AAGE,IAAA,MAAM,EAAEH,KAAK,CAACC,UAAN,CAAiBG,MAH3B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title= {props.meetupData.title}\r\n      adress={props.meetupData.adress}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n\r\n  const meetupsCollection = database.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  /*  console.log(meetups) */\r\n  const justIds = meetups.map(meetup => meetup._id.toString())\r\n client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}})),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  \r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\"\r\n      );\r\n      const database = client.db();\r\n      const meetupsCollection = database.collection(\"meetups\");\r\n\r\n      const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n\r\n      client.close();\r\n  \r\n    \r\n  return {\r\n    props: {\r\n      meetupData: {\r\n          id: selectedMeetup._id.toString(),\r\n          title: selectedMeetup.title,\r\n          address: selectedMeetup.address,\r\n          image:selectedMeetup.image,\r\n          description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}