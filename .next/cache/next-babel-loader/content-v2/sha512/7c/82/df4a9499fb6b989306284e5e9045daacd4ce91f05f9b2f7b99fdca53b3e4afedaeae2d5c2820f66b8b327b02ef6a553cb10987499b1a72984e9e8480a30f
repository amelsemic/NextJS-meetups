{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\onwards-to-a-bigger-project-NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80\",\n    title: \"First meetup\",\n    adress: \"some street city\",\n    description: \"our first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\");\n  const database = client.db();\n  const meetupsCollection = database.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  /*  console.log(meetups) */\n\n  const justIds = meetups.map(meetup => meetup._id);\n  console.log('Just IDs:', justIds);\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: \"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80\",\n        id: meetupId,\n        title: \"First meetup\",\n        adress: \"Some street\",\n        description: \"This is first meetup...\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/User/Desktop/React/onwards-to-a-bigger-project-NextJS/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","database","db","meetupsCollection","collection","meetups","find","toArray","justIds","map","meetup","_id","console","log","fallback","paths","params","meetupId","getStaticProps","context","props","meetupData","image","id","title","adress","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,+JADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,MAAM,EAAC,kBAHT;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,qFADmB,CAArB;AAGA,QAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB;AAEA,QAAMC,iBAAiB,GAAGF,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB;AACA;;AACA,QAAMC,OAAO,GAAGH,OAAO,CAACI,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,GAA7B,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,OAAxB;AAEA,SAAO;AACLM,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK;AAFF,GAAP;AAeD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,+JAFQ;AAGVC,QAAAA,EAAE,EAAEN,QAHM;AAIVO,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,MAAM,EAAE,aALE;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80\"\r\n      title=\"First meetup\"\r\n      adress=\"some street city\"\r\n      description=\"our first meetup\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://amel123:123@cluster0.cnozerd.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const database = client.db();\r\n\r\n  const meetupsCollection = database.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  /*  console.log(meetups) */\r\n  const justIds = meetups.map(meetup => meetup._id)\r\n  console.log('Just IDs:',justIds)\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: [\r\n      {\r\n        params: {\r\n          meetupId: \"m1\",\r\n        },\r\n      },\r\n      {\r\n        params: {\r\n          meetupId: \"m2\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://images.unsplash.com/photo-1477959858617-67f85cf4f1df?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=944&q=80\",\r\n        id: meetupId,\r\n        title: \"First meetup\",\r\n        adress: \"Some street\",\r\n        description: \"This is first meetup...\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}